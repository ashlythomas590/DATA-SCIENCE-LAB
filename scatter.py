# -*- coding: utf-8 -*-
"""scatter

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Ym9kgh4yQ4K2wS4oKLCF8lNY5lrZl0lq
"""

import matplotlib.pyplot as plt
x=[1,2,3,4,5]
y=[2,3,5,7,11]
plt.plot(x,y,marker='o')
plt.title("Line plot")
plt.xlabel("X-axis")
plt.ylabel("Y-axis")
plt.show()

import matplotlib.pyplot as plt
categories=['A','B','C','D','E']
values=[4,7,1,8,5]
plt.bar(categories,values)
plt.xlabel('categories')
plt.ylabel('values')
plt.title('simple bar plot')
plt.show()

import matplotlib.pyplot as plt
categories=['A','B','C','D']
values=[5,7,3,8]
plt.bar(categories,values,color='purple')
plt.title('Bar plot')
plt.xlabel('categories')
plt.ylabel('values')
plt.show()

import matplotlib.pyplot as plt
import numpy as np
data=np.random.randn(1000)
plt.hist(data,bins=30,color='blue',edgecolor='black')
plt.title('histogram')
plt.xlabel('value')
plt.ylabel('ffrequency')
plt.show()

import matplotlib.pyplot as plt
x=[5,7,8,7,2,17,2,9,4,11,12,9,6]
y=[99,86,87,88,100,86,103,87,94,78,77,85,86]
plt.scatter(x,y,color='red')
plt.title('scatter plot')
plt.xlabel('x-axis')
plt.ylabel('y-axis')
plt.show()

import matplotlib.pyplot as plt

sizes = [15, 30, 45, 10]
labels = ['A', 'B', 'C', 'D']
colors = ['gold', 'yellowgreen', 'lightcoral', 'lightskyblue']
plt.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', shadow=True, startangle=140)
plt.title('Pie Chart')
plt.axis('equal')
plt.show()

import matplotlib.pyplot as plt
import numpy as np
data=[np.random.normal(0,std,100) for std in range(1,4)]
plt.boxplot(data)
plt.xlabel('data sets')
plt.ylabel('values')
plt.title('simple box plot')
plt.show()

import matplotlib.pyplot as plt
x1=[1,2,3,4,5]
y1=[2,3,4,5,6]
x2=[2,3,4,5,6]
y2=[3,4,5,6,7]
x3=[1,3,4,7,8]
y3=[5,3,8,3,5]
plt.scatter(x1,y1,color='red', label='dataset 1')
plt.scatter(x2,y2,color='blue',label='dataset 2')
plt.scatter(x3,y3,color='green',label='dataset 3')
plt.xlabel('x-axis label')
plt.ylabel('y-[axis label')
plt.title('multiple scatter plots')
plt.legend()
plt.show()

()